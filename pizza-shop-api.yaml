openapi: 3.0.3
info:
  title: Pizza Shop Order API
  version: 1.0.0
  description: API for ordering pizzas and managing pizza catalog

servers:
  - url: https://api.pizzashop.com/v1

paths:
  /pizzas:
    get:
      summary: List available pizzas
      operationId: listPizzas
      responses:
        '200':
          description: Successful pizza catalog retrieval
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pizza'

  /pizzas/{pizzaId}:
    get:
      summary: Get specific pizza details
      operationId: getPizzaById
      parameters:
        - name: pizzaId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pizza details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pizza'
        '404':
          description: Pizza not found

  /orders:
    post:
      summary: Place a new pizza order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid order request

  /orders/{orderId}:
    get:
      summary: Get order status
      operationId: getOrderStatus
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found

components:
  schemas:
    Pizza:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        toppings:
          type: array
          items:
            type: string

    OrderRequest:
      type: object
      required:
        - pizzaId
        - quantity
        - customerName
      properties:
        pizzaId:
          type: integer
        quantity:
          type: integer
          minimum: 1
        customerName:
          type: string
        specialInstructions:
          type: string

    Order:
      type: object
      properties:
        id:
          type: integer
        pizzaId:
          type: integer
        quantity:
          type: integer
        customerName:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - PREPARING
            - READY
            - DELIVERED
        totalPrice:
          type: number
          format: float